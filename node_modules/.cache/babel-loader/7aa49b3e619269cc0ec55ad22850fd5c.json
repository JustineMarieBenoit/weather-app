{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\jimmy\\\\Desktop\\\\Projects\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import WeatherConditions from'../WeatherConditions/WeatherConditions';import WeatherGraphics from'../WeatherGraphics/WeatherGraphics';import'./WeatherForecast.css';var WeatherForecast=function WeatherForecast(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),city=_useState2[0],setCity=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),forecast=_useState4[0],setForecast=_useState4[1];var _useState5=useState('imperial'),_useState6=_slicedToArray(_useState5,2),unit=_useState6[0],setUnit=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),error=_useState8[0],setError=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loading=_useState10[0],setLoading=_useState10[1];var uriEncodedCity=encodeURIComponent(city);function getForecast(e){e.preventDefault();if(city.length===0){return setError(true);}setError(false);setForecast({});setLoading(true);fetch(\"https://community-open-weather-map.p.rapidapi.com/weather?units=\".concat(unit,\"&q=\").concat(uriEncodedCity),{\"method\":\"GET\",\"headers\":{\"x-rapidapi-host\":\"community-open-weather-map.p.rapidapi.com\",\"x-rapidapi-key\":\"d9cb56b47fmsh7c0659317c13d37p1db628jsn2f72e66714c8\"}}).then(function(forecast){return forecast.json();}).then(function(forecast){if(forecast.cod!==200){throw new Error();}setForecast(forecast);setLoading(false);}).catch(function(err){setError(true);setLoading(false);console.log(err.message);});}return React.createElement(\"div\",{className:\"weather-forecast\"},React.createElement(\"h2\",null,\"What's The Weather Like?\"),React.createElement(WeatherGraphics,null),React.createElement(\"form\",{onSubmit:getForecast},React.createElement(\"div\",{className:\"form-input\"},React.createElement(\"input\",{type:\"text\",placeholder:\"Enter City\",maxLength:\"50\",value:city,onChange:function onChange(e){return setCity(e.target.value);}})),React.createElement(\"div\",{className:\"form-radio\"},React.createElement(\"label\",{className:\"radio-btn\"},\"Fahrenheit\",React.createElement(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"imperial\",value:\"imperial\",onChange:function onChange(e){return setUnit(e.target.value).trim();}}),React.createElement(\"span\",{className:\"checkmark\"})),React.createElement(\"label\",{className:\"radio-btn\"},\"Celcius\",React.createElement(\"input\",{type:\"radio\",name:\"units\",checked:unit===\"metric\",value:\"metric\",onChange:function onChange(e){return setUnit(e.target.value);}}),React.createElement(\"span\",{className:\"checkmark\"}))),React.createElement(\"div\",{className:\"form-btn\"},React.createElement(\"button\",{type:\"submit\"},\"Let's Find Out!\"))),React.createElement(WeatherConditions,{forecast:forecast,error:error,loading:loading}));};export default WeatherForecast;","map":{"version":3,"sources":["C:/Users/jimmy/Desktop/Projects/weather-app/src/components/WeatherForecast/WeatherForecast.js"],"names":["React","useState","WeatherConditions","WeatherGraphics","WeatherForecast","city","setCity","forecast","setForecast","unit","setUnit","error","setError","loading","setLoading","uriEncodedCity","encodeURIComponent","getForecast","e","preventDefault","length","fetch","then","json","cod","Error","catch","err","console","log","message","target","value","trim"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport WeatherConditions from '../WeatherConditions/WeatherConditions'\r\nimport WeatherGraphics from '../WeatherGraphics/WeatherGraphics'\r\nimport './WeatherForecast.css'\r\n\r\n\r\nconst WeatherForecast = () => {\r\n    let [city, setCity] = useState('')\r\n    let [forecast, setForecast] = useState({})\r\n    let [unit, setUnit] = useState('imperial')\r\n    let [error, setError] = useState(false);\r\n    let [loading, setLoading] = useState(false);\r\n\r\n    const uriEncodedCity = encodeURIComponent(city)\r\n\r\n    function getForecast(e) {\r\n        e.preventDefault()\r\n\r\n        if (city.length === 0) {\r\n            return setError(true)\r\n        }\r\n\r\n        setError(false)\r\n        setForecast({})\r\n        setLoading(true)\r\n\r\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"d9cb56b47fmsh7c0659317c13d37p1db628jsn2f72e66714c8\"\r\n            }\r\n        })\r\n            .then(forecast => forecast.json())\r\n            .then(forecast => {\r\n                if (forecast.cod !== 200) {\r\n                    throw new Error()\r\n                }\r\n                setForecast(forecast)\r\n                setLoading(false)\r\n            })\r\n            .catch(err => {\r\n                setError(true);\r\n                setLoading(false);\r\n                console.log(err.message);\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"weather-forecast\">\r\n            <h2>What's The Weather Like?</h2>\r\n            <WeatherGraphics />\r\n            <form onSubmit={getForecast}>\r\n                <div className=\"form-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter City\"\r\n                        maxLength=\"50\"\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-radio\">\r\n                    <label className=\"radio-btn\">\r\n                    Fahrenheit\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"units\"\r\n                            checked={unit === \"imperial\"}\r\n                            value=\"imperial\"\r\n                            onChange={(e) => setUnit(e.target.value).trim()}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                </label>\r\n                    <label className=\"radio-btn\">\r\n                    Celcius\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"units\"\r\n                            checked={unit === \"metric\"}\r\n                            value=\"metric\"\r\n                            onChange={(e) => setUnit(e.target.value)}\r\n                        />\r\n                        <span className=\"checkmark\"></span>\r\n                </label>\r\n                </div>\r\n                <div className=\"form-btn\">\r\n                    <button type=\"submit\">Let's Find Out!</button>\r\n                </div>\r\n            </form>\r\n            <WeatherConditions\r\n                forecast={forecast}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default WeatherForecast;\r\n"]},"metadata":{},"sourceType":"module"}