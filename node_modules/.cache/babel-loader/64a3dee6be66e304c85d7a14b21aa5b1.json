{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimmy\\\\Desktop\\\\Projects\\\\weather-app\\\\src\\\\components\\\\WeatherForecast\\\\WeatherForecast.js\";\nimport React, { useState } from 'react';\nimport WeatherConditions from '../WeatherConditions/WeatherConditions';\n\nconst WeatherForecast = () => {\n  let [city, setCity] = useState('');\n  let [forecast, setForecast] = useState({});\n  let [unit, setUnit] = useState('imperial');\n  const uriEncodedCity = encodeURIComponent(city);\n\n  function getForecast(e) {\n    e.preventDefault();\n    fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"d9cb56b47fmsh7c0659317c13d37p1db628jsn2f72e66714c8\"\n      }\n    }).then(response => response.json()).then(response => {\n      setForecast(response);\n    });\n  }\n\n  return React.createElement(\"div\", {\n    className: \"weather-forecast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"What's The Weather Like?\"), React.createElement(\"form\", {\n    onSubmit: getForecast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter City\",\n    maxLength: \"50\",\n    value: city,\n    onChange: e => setCity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"units\",\n    checked: unit === \"imperial\",\n    value: \"imperial\",\n    onChange: e => setUnit(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), \"Fahrenheit\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"units\",\n    checked: unit === \"metric\",\n    value: \"metric\",\n    onChange: e => setUnit(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \"Celcius\")), React.createElement(\"div\", {\n    className: \"form-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Get Forecast\"))), React.createElement(WeatherConditions, {\n    forecast: forecast,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport default WeatherForecast;","map":{"version":3,"sources":["C:/Users/jimmy/Desktop/Projects/weather-app/src/components/WeatherForecast/WeatherForecast.js"],"names":["React","useState","WeatherConditions","WeatherForecast","city","setCity","forecast","setForecast","unit","setUnit","uriEncodedCity","encodeURIComponent","getForecast","e","preventDefault","fetch","then","response","json","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,iBAAP,MAA8B,wCAA9B;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAC1B,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,UAAD,CAA9B;AAEA,QAAMS,cAAc,GAAGC,kBAAkB,CAACP,IAAD,CAAzC;;AAEA,WAASQ,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAE,mEAAkEP,IAAK,MAAKE,cAAe,EAA7F,EAAgG;AACjG,gBAAU,KADuF;AAEjG,iBAAW;AACP,2BAAmB,2CADZ;AAEP,0BAAkB;AAFX;AAFsF,KAAhG,CAAL,CAOKM,IAPL,CAOUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPtB,EAQKF,IARL,CAQUC,QAAQ,IAAI;AACdV,MAAAA,WAAW,CAACU,QAAD,CAAX;AACH,KAVL;AAWH;;AACD,SACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAM,IAAA,QAAQ,EAAEL,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,YAFhB;AAGI,IAAA,SAAS,EAAC,IAHd;AAII,IAAA,KAAK,EAAER,IAJX;AAKI,IAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACM,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,OAAO,EAAEZ,IAAI,KAAK,UAHtB;AAII,IAAA,KAAK,EAAC,UAJV;AAKI,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eADJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,OAAO,EAAEZ,IAAI,KAAK,QAHtB;AAII,IAAA,KAAK,EAAC,QAJV;AAKI,IAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,YAXJ,CAVJ,EAgCI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,CAhCJ,CAFJ,EAsCI,oBAAC,iBAAD;AACI,IAAA,QAAQ,EAAEd,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,CADJ;AA4CH,CAjED;;AAkEA,eAAeH,eAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport WeatherConditions from '../WeatherConditions/WeatherConditions'\r\n\r\n\r\nconst WeatherForecast = () => {\r\n    let [city, setCity] = useState('')\r\n    let [forecast, setForecast] = useState({})\r\n    let [unit, setUnit] = useState('imperial')\r\n\r\n    const uriEncodedCity = encodeURIComponent(city)\r\n\r\n    function getForecast(e) {\r\n        e.preventDefault();\r\n        fetch(`https://community-open-weather-map.p.rapidapi.com/weather?units=${unit}&q=${uriEncodedCity}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"d9cb56b47fmsh7c0659317c13d37p1db628jsn2f72e66714c8\"\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setForecast(response)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"weather-forecast\">\r\n            <h2>What's The Weather Like?</h2>\r\n            <form onSubmit={getForecast}>\r\n                <div className=\"form-row\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Enter City\"\r\n                        maxLength=\"50\"\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"units\"\r\n                            checked={unit === \"imperial\"}\r\n                            value=\"imperial\"\r\n                            onChange={(e) => setUnit(e.target.value)}\r\n                        />\r\n                        Fahrenheit\r\n                </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"units\"\r\n                            checked={unit === \"metric\"}\r\n                            value=\"metric\"\r\n                            onChange={(e) => setUnit(e.target.value)}\r\n                        />\r\n                        Celcius\r\n                </label>\r\n                </div>\r\n                <div className=\"form-btn\">\r\n                <button type=\"submit\">Get Forecast</button>\r\n                </div>\r\n            </form>\r\n            <WeatherConditions\r\n                forecast={forecast}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default WeatherForecast;\r\n"]},"metadata":{},"sourceType":"module"}